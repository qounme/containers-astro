---

---

<label class="grid cursor-pointer place-items-center p-2">
  <input
    type="checkbox"
    id="theme-controller"
    class="toggle col-span-2 col-start-1 row-start-1 bg-base-content hover:bg-base-content"
  />
  <iconify-icon
    icon="line-md:moon-alt-loop"
    mode="svg"
    width="1rem"
    height="1rem"
    id="theme-controller-moon-icon"
    class="col-start-1 row-start-1 inline-block h-4 w-4"></iconify-icon>
  <iconify-icon
    icon="line-md:sunny-outline-loop"
    mode="svg"
    width="1rem"
    height="1rem"
    id="theme-controller-sunny-icon"
    class="col-start-2 row-start-1 inline-block h-4 w-4"></iconify-icon>
</label>

{/* テーマの更新 */}
<script>
  const themeController = document.getElementById('theme-controller')! as HTMLInputElement
  // iconify icon web component は専用の型になるため any を設定しておく
  const themeControllerSunnyIcon = document.getElementById('theme-controller-sunny-icon')! as any
  const themeControllerMoonIcon = document.getElementById('theme-controller-moon-icon')! as any
  const currentTheme = document.documentElement.getAttribute('data-theme')

  themeController.checked = currentTheme === 'dark'

  const updateTheme = (theme: string) => {
    document.documentElement.setAttribute('data-theme', theme)
    localStorage.setItem('theme', theme)
  }
  const restartThemeControllerIconAnimation = () => {
    themeControllerSunnyIcon.restartAnimation()
    themeControllerMoonIcon.restartAnimation()
  }

  themeController.addEventListener('change', () => {
    restartThemeControllerIconAnimation()
    updateTheme(themeController.checked ? 'dark' : 'light')
  })
</script>
